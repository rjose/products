QPlan v5
========
Rino Jose <@rjose>
v1, Jul 25, 2013: Initial version

Overview
--------
I've been reading the
link:http://www.amazon.com/The-UNIX-Philosophy-ebook/dp/B002OL2G4G[Unix
Philsophy] again over the past few days. Something that's been nagging me for a
while with qplan is that I haven't written it in a unixy way. It has a captive
user interface, it doesn't interface with other programs, etc. In this iteration
of qplan, I'd like to try to make the pieces smaller and have the shell be the
primary interaction mechanism. We'll still need a server that can accept and
handle requests, but we'll interact with it differently from the commandline.
I'm thinking we should have a program that I can pipe text into that could be
interpreted as commands. We'd specify (or configure) the server/port/path that
these commands would be sent to. The program would then write the output from
the server to stdout. All the output should be in a form that can be easily
processed by awk (e.g., tab separated fields). 

If we organized our programs this way, we could have a separate formatting
program that would know how to take data (or sets of data) and prepare the
appropriate output. One would be the create more "standardized" output for
further processing. We should be able to switch this to an ascii report or to
JSON. I think these should be separate programs.

The server would also use the shell to pipe output from program to program to
generate a final result.

When we want to broadcast data, we could put the pipe together first, and then
have the final part of the pipe be something that could send data to others via
an HTTP request or a websocket. A websocket might be the way to go if we needed
to make decisions on what data to ask for based on some initial data from the
server -- in effect, if we needed the client and server to have a conversation
before getting the final data.
